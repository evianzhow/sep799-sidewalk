<?xml version="1.0"?>
<launch>
    <!-- https://github.com/introlab/rtabmap_ros/blob/noetic-devel/rtabmap_demos/launch/demo_husky.launch
        6) 3DoF mapping with 3D LiDAR and RGB-D camera and ICP odometry (with wheel odometry as guess)
            $ roslaunch rtabmap_demos demo_husky.launch lidar3d:=true slam2d:=true camera:=true icp_odometry:=true
    -->
    <arg name="nav_config_path" value="$(find husky_oakd_stereo_nav)/config/navigation" />

    <arg name="navigation"   default="true"/>
    <arg name="localization" default="false"/>
    <arg name="icp_odometry" default="true"/>
    <arg name="rtabmap_viz"  default="true"/>
    <arg name="camera"       default="true"/>
    <arg name="lidar2d"      default="false"/>
    <arg name="lidar3d"      default="true"/>
    <arg name="lidar3d_ray_tracing" default="true"/>
    <arg name="slam2d"       default="true"/>
    <arg name="depth_from_lidar" default="false"/>

    <arg     if="$(arg lidar3d)" name="cell_size" default="0.3"/>
    <arg unless="$(arg lidar3d)" name="cell_size" default="0.05"/>

    <arg if="$(eval not lidar2d and not lidar3d)" name="lidar_args" default=""/>

    <arg if="$(arg lidar2d)" name="lidar_args" default="
        --Reg/Strategy 1
        --RGBD/NeighborLinkRefining true
        --Grid/CellSize $(arg cell_size)
        --Icp/PointToPlaneRadius 0
        --Odom/ScanKeyFrameThr 0.5
        --Icp/MaxTranslation 1"/>

    <arg if="$(arg lidar3d)" name="lidar_args" default="
        --Reg/Strategy 1
        --RGBD/NeighborLinkRefining true
        --ICP/PM true
        --Icp/PMOutlierRatio 0.7
        --Icp/VoxelSize $(arg cell_size)
        --Icp/MaxCorrespondenceDistance 1
        --Icp/PointToPlaneGroundNormalsUp 0.9
        --Icp/Iterations 10
        --Icp/Epsilon 0.001
        --OdomF2M/ScanSubtractRadius $(arg cell_size)
        --OdomF2M/ScanMaxSize 15000
        --Odom/ScanKeyFrameThr 0.5
        --Grid/ClusterRadius 1
        --Grid/RangeMax 20
        --Grid/RayTracing $(arg lidar3d_ray_tracing)
        --Grid/CellSize $(arg cell_size)
        --Icp/PointToPlaneRadius 0
        --Icp/PointToPlaneK 10
        --Icp/MaxTranslation 1"/>

    <!--- Run rtabmap -->
    <remap from="/rtabmap/grid_map" to="/map"/>
    <include file="$(find rtabmap_launch)/launch/rtabmap.launch">
        <arg     if="$(arg localization)" name="args" value="--Reg/Force3DoF $(arg slam2d) $(arg lidar_args)" />
        <arg unless="$(arg localization)" name="args" value="--Reg/Force3DoF $(arg slam2d) $(arg lidar_args) -d" /> <!-- create new map -->
        <arg name="localization"    value="$(arg localization)" />
        <arg name="visual_odometry" value="false" />
        <arg name="approx_sync"     value="$(eval camera or not icp_odometry)" />
        <arg name="imu_topic"       value="/stereo_inertial_publisher/imu" />
        <arg unless="$(arg icp_odometry)" name="odom_topic" value="/odometry/filtered" />
        <arg name="frame_id"        value="base_link" />
        <arg name="rtabmap_viz"      value="$(arg rtabmap_viz)" />

        <!-- 2D LiDAR -->
        <arg name="subscribe_scan"  value="$(arg lidar2d)" />
        <arg     if="$(arg lidar2d)" name="scan_topic"  value="/ouster/scan" />
        <arg unless="$(arg lidar2d)" name="scan_topic"  value="/scan_not_used" />

        <!-- 3D LiDAR -->
        <arg name="subscribe_scan_cloud"  value="$(arg lidar3d)" />
        <!-- <arg     if="$(arg lidar3d)" name="scan_cloud_topic" value="/ouster/points" /> -->
        <arg     if="$(arg lidar3d)" name="scan_cloud_topic" value="/ouster/points" />
        <arg unless="$(arg lidar3d)" name="scan_cloud_topic" value="/scan_cloud_not_used" />

        <!-- If camera is used -->
        <arg name="depth"             value="$(eval camera and not depth_from_lidar)" />
        <arg name="subscribe_rgb"     value="$(eval camera)" />
        <arg name="rgbd_sync"         value="$(eval camera and not depth_from_lidar)" />
        <arg name="rgb_topic"         value="/stereo_inertial_publisher/color/image" />
        <arg name="camera_info_topic" value="/stereo_inertial_publisher/color/camera_info" />
        <arg name="depth_topic"       value="/stereo_inertial_publisher/stereo/depth" />
        <arg name="approx_rgbd_sync"  value="true" />

        <!-- If depth generated from lidar projection (in case we have only a single RGB camera with a 3D lidar) -->
        <arg name="gen_depth"                  value="$(arg depth_from_lidar)" />
        <arg name="gen_depth_decimation"       value="4" />
        <arg name="gen_depth_fill_holes_size"  value="3" />
        <arg name="gen_depth_fill_iterations"  value="1" />
        <arg name="gen_depth_fill_holes_error" value="0.3" />

        <!-- If icp_odometry is used -->
        <arg if="$(arg icp_odometry)" name="icp_odometry" value="true" />
        <arg if="$(arg icp_odometry)" name="odom_guess_frame_id" value="odom" />
        <arg if="$(arg icp_odometry)" name="vo_frame_id" value="icp_odom" />
        <arg unless="$(arg slam2d)"   name="wait_imu_to_init" value="true" />
        <arg if="$(arg lidar3d)"      name="odom_args" value="--Icp/CorrespondenceRatio 0.01"/>
    </include>

    <!--- Run Move Base -->
    <!-- <include if="$(arg navigation)" file="$(find husky_navigation)/launch/move_base.launch" /> -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(arg nav_config_path)/costmap_common_sim.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(arg nav_config_path)/costmap_common_sim.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(arg nav_config_path)/costmap_local_lidar.yaml" command="load" />
        <rosparam file="$(arg nav_config_path)/costmap_global.yaml" command="load" />
        <rosparam file="$(arg nav_config_path)/trajectory_planner.yaml" command="load" />
        <rosparam file="$(arg nav_config_path)/global_planner.yaml" command="load" />
    </node>

    <!-- depthai convenice launch -->
    <include file="$(find depthai_examples)/launch/stereo_inertial_node.launch">
        <arg name="enableRviz" value="false" />
        <arg name="lrcheck" value="true" />
        <arg name="extended" value="false" />
        <arg name="subpixel" value="true" />
        <arg name="rectify" value="true" />
        <arg name="depth_aligned" value="true" />
        <arg name="enableSpatialDetection" value="false" />
        <arg name="syncNN" value="false" />
        <arg name="monoResolution" value="800p" />
        <arg name="rgbResolution" value="1080p" />
        <arg name="confidence" value="245" />
        <arg name="LRchecktresh" value="10" />
    </include>

</launch>
