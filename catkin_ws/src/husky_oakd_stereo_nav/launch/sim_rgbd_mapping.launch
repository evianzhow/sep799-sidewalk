<?xml version="1.0"?>
<launch>
    <!-- Extra Payload -->
    <!-- Set the environment variable -->
    <env name="HUSKY_URDF_EXTRAS" value="$(find husky_oakd_stereo_nav)/urdf/mcm07_customization.urdf.xacro" />
    <arg name="odom_topic" default="/odom"/>
    <arg name="imu_topic" default="/imu/data"/> <!-- only used with VIO approaches -->
    <arg name="wait_imu_to_init" default="true"/>

    <!-- Gazebo Simulation Inputs -->
    <arg name="rgb_image_raw" default="/oak_d/color/image_raw"/>
    <arg name="depth_image_raw" default="/oak_d/depth/image_raw"/>
    <arg name="rgb_camera_info" default="/oak_d/color/camera_info"/>

    <group ns="oak-d">
        <!-- We are running rtabmap_ros under docker, stereo vision will run -->
        <!--   on host machine. -->
    </group>

    <group ns="rtabmap">
        <!-- parameters -->
        <arg name="local_bundle" default="true" />
        <arg name="database_path" default="~/.ros/rtabmap.db"/>

        <node pkg="rtabmap_sync" type="rgbd_sync" name="rgbd_sync" output="screen">
            <remap from="rgb/image"         to="$(arg rgb_image_raw)"/>
            <remap from="depth/image"       to="$(arg depth_image_raw)"/>
            <remap from="rgb/camera_info"   to="$(arg rgb_camera_info)"/>
        </node>

        <!-- visual odometry -->
        <node pkg="rtabmap_odom" type="rgbd_odometry" name="rtabmap_odom">
            <remap from="rgbd_image"       to="rgbd_image"/>
            <remap from="odom"                  to="$(arg odom_topic)"/>
            <remap from="imu"             to="$(arg imu_topic)"/>
            <param name="subscribe_rgbd"  type="bool" value="true"/>

            <param name="frame_id" value="oak-d_frame"/>
            <param name="odom_frame_id"   type="string" value="odom"/>
            <param name="wait_imu_to_init"            type="bool"   value="$(arg wait_imu_to_init)"/>

            <!-- no changes to default parameters since perfect perception under simulation -->
            <param name="publish_tf" type="bool" value="true" />

            <!-- restrict pose of robot to 3 degrees of freedom (x, y, theta), i.e a 2D plane -->
            <param name="Reg/Force3DoF" value="true"/>
        </node>

        <!-- SLAM Node for Mapping -->
        <node pkg="rtabmap_slam" type="rtabmap" name="rtabmap_slam" output="screen" args="--delete_db_on_start">
            <param name="frame_id" value="base_link"/>
            <param name="database_path"       type="string" value="$(arg database_path)"/>

            <param name="subscribe_rgb"   type="bool" value="false"/>
            <param name="subscribe_depth" type="bool" value="false"/>
            <param name="subscribe_rgbd" type="bool" value="true"/>

            <remap from="odom"            to="$(arg odom_topic)"/>
            <remap from="rgbd_image"       to="rgbd_image"/>
            <param name="approx_sync"         type="bool"   value="true"/>

            <param name="queue_size" type="int" value="30" />
            <!-- SLAM mode -->
            <param name="Mem/IncrementalMemory" type="string" value="true" />
            
            <!-- start putting nodes in long term memory once graph optimization takes more than this many ms -->
            <!-- <param name="Rtabmap/TimeThr" type="string" value="700" /> -->

            <!-- make new nodes at this rate (Hz) -->
            <param name="Rtabmap/DetectionRate" type="string" value="1" />
            <param name="publish_tf" type="bool" value="true" />

            <!-- restrict pose of robot to 3 degrees of freedom (x, y, theta), i.e a 2D plane -->
            <param name="Reg/Force3DoF" value="true"/>
        </node>

        <!-- Visualization Node for GUI -->
        <node pkg="rtabmap_viz" type="rtabmap_viz" name="rtabmap_viz" args="-d $(find rtabmap_demos)/launch/config/rgbd_gui.ini" output="screen">
            <param name="frame_id" value="oak-d_frame"/>
            <param name="subscribe_odom" value="true"/>
            <param name="subscribe_rgb" value="true"/>
            <param name="subscribe_depth" value="true"/>
            <param name="visualize_occupancy_grid" value="true"/>
            <remap from="odom"            to="$(arg odom_topic)"/>
        </node>
    </group>
</launch>